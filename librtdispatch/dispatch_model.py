# -*- coding: utf-8 -*-
"""
Pyomo real-time dispatch model

"""
#import pyomo
import pyomo.environ as pe


class RealTimeDispatchModel(object):
    def __init__(self):
        self.model = pe.ConcreteModel()
        self.model.generateParams({})
        self.model.generateVariables()

    def generateParams(self,param_dict):
        ### Sets and Indices ###
        self.model.T = pe.Set(initialize = range(1,param_dict["num_periods"]+1))  #T: time periods
        ### Time-indexed CSP Parameters ##
        self.model.delta_rs = pe.Param(self.model.T, mutable=True) # \delta^{rs}_{t}: Estimated fraction of period $t$ required for receiver start-up [-]
        self.model.D = pe.Param(self.model.T, mutable=True) #D_{t}: Time-weighted discount factor in period $t$ [-]
        self.model.eta_amb = pe.Param(self.model.T, mutable=True)  #\eta^{amb}_{t}: Cycle efficiency ambient temperature adjustment factor in period $t$ [-]
        self.model.eta_c = pe.Param(self.model.T, mutable=True)   #\eta^{c}_{t}:   Normalized condenser parasitic loss in period $t$ [-] 
        self.model.P = pe.Param(self.model.T, mutable=True)       #P_{t}: Electricity sales price in period $t$ [\$/kWh\sse]
        self.model.Q_in = pe.Param(self.model.T, mutable=True)    #Q^{in}_{t}: Available thermal power generated by the CSP heliostat field in period $t$ [kW\sst]
        self.model.Q_c = pe.Param(self.model.T, mutable=True)     #Q^{c}_{t}: Allowable power per period for cycle start-up in period $t$ [kW\sst]
        self.model.W_dot_net = pe.Param(self.model.T, mutable=True)  #\dot{W}^{net}_{t}: Net grid transmission upper limit in period $t$ [kW\sse]
        self.model.W_u_plus = pe.Param(self.model.T, mutable=True)  #W^{u+}_{t}: Maximum power production when starting generation in period $t$  [kW\sse]
        self.model.W_u_plus = pe.Param(self.model.T, mutable=True)  #W^{u-}_{t}: Maximum power production in period $t$ when stopping generation in period $t+1$  [kW\sse]
        ### PV Parameters ###
        self.model.w_pv = pe.Param(self.model.T, mutable=True)      #w^{PV}_t: <aximum DC power production from PV system in period $t$
        ###  Cost Parameters ###
        
    
    def generateVariables(self):
        pass 